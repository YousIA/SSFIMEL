/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package arm.apriori.core;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author mobntic
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


public class SSFIM {
// The data source of the transactions. It's an object that can generate a
	// list of transactions.
	protected TransactionSource source;

	// The transactions generated by the source
	public List<Itemset> transactions;

	// A link to the GUI, so as to log informations.
	protected NewClass gui;

        List<String[]> candidates=new ArrayList<String[]>();
        List<Integer> freq=new ArrayList<Integer>();

	protected void log(String s) {
	//	gui.log(s);
        }

	public void setSource(TransactionSource transactionSource) {
		LabelsMap.getInstance().clear();
		SupportMap.clear();
		source = transactionSource;
	}

	public List<Itemset> getTransactions() {
		transactions = source.generate();
   		/*System.out.println("The following transactions have been loaded: ");
		for (Itemset i : transactions) {
			System.out.println("\t> " + i);
		}
                  */
		return transactions;
	}

void AddingElement(String s2, int iter)
{
    String s[] =s2.split("#");
int i=0;
boolean find=false;
if (iter!=0)
{
  while (find==false && i<candidates.size())
  {
  boolean equal=true;
  //String s1[]=new String[100];
  String s1[]=candidates.get(i);
  int j=0;
  while(equal==true && j!=s1.length)
  {
   if (s[j].compareTo(s1[j])!=0)
   {
   equal=false;
   }
     else
     {
     j++;
     }
  }
  if (equal==true)
  {
  find=true;
  int x=freq.get(i);
  x++;
  freq.add(i, x);
  }
i++;
  }
 }

if (find==false)
{
   
candidates.add(s);
freq.add(1);
}
}
    public void Generate(){


        int size=transactions.size();
     int entry=0;
    for(int i=0;i<10;i++){
        Permutation P =new Permutation();
       String arr[];
       arr=transactions.get(i).toString().split(",");
      //System.out.println("transaction"+ i);
        int n = arr.length;
        //System.out.println(n);
        for (int j=2; j<=n;j++)
        {
            if (j%2==0)
            {
         P.printCombination(arr,n , j);
            }
       }

        for (int index=0;index<P.cpt; index++)
            AddingElement(P.All[index], i);
      // System.out.println(P.cpt);
        //entry=entry+P.cpt;

       /* for(int m=0;m<P.cpt;m++){
        System.out.println(P.All[m]);
             }*/
    }
     String s[];
    System.out.println("the number of candidates is"+candidates.size()+"="+ freq.size());
     for (int index=0; index<candidates.size(); index++)
     {
         s=candidates.get(index);
      for (int i=0;i<s.length;i++)
         System.out.print(s[i]+ "  ");
     System.out.println("freq is: "+ freq.get(index));

     }

     //System.out.println(entry);
         
}
}

